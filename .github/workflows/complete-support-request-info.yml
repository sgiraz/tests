name: Support Request ‚Äì Complete Support Request Info

on:
 issues:
    types: [opened]

env:
  FORM_TYPE: form-type-support
  
jobs:
  trigger:
    name: "Complete info"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@main

    - name: Verify the form type
      run: |
        gh issue view ${ISSUE_NUMBER} --json labels --jq '.labels[].name' > labels.txt
        echo "Found the following labels üè∑Ô∏è"
        cat labels.txt
        echo ""
        echo "ciao xxx"
        echo ""
        if grep -q ${FORM_TYPE} labels.txt; then
          echo "verify=yes" >> $GITHUB_ENV;
        else
          echo "verify=no" >> $GITHUB_ENV;
        fi
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_NUMBER: ${{ github.event.issue.number }} 
    
    - name: Parse the purchase order
      uses: stefanbuck/github-issue-parser@v3.0.1
      id: issue-parser
      with:
        template-path: .github/ISSUE_TEMPLATE/support-request.yml
        
    - name: Print the fields
      run: echo '${{ steps.issue-parser.outputs.jsonString }}'

    # - name: Check Issue Title
    #   if: env.verify=='yes'
    #   id: check-1
    #   run: |
    #     if [ "${{ github.event.issue.title }}" == "[short description]" ]; then
    #       echo "WARNING_BODY=- [ ] give the issue a meaningful Title." >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] give the issue a meaningful Title." >> $GITHUB_OUTPUT
    #     fi
        
    # - name: Check Applicant
    #   if: env.verify=='yes'
    #   id: check-2
    #   run: |
    #     if [ "${APPLICANT}" == "" ]; then
    #       echo "WARNING_BODY=- [ ] enter the Applicant." >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] enter the Applicant." >> $GITHUB_OUTPUT
    #     fi
    #   env:
    #     APPLICANT: ${{ steps.issue-parser.outputs.issueparser_applicant }}

    # - name: Check Supervisor
    #   if: env.verify=='yes'
    #   id: check-3
    #   run: |
    #     if [ "${SUPERVISOR}" == "" ]; then
    #       echo "WARNING_BODY=- [ ] enter your Supervisor." >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] enter your Supervisor." >> $GITHUB_OUTPUT
    #     fi
    #   env:
    #     SUPERVISOR: ${{ steps.issue-parser.outputs.issueparser_supervisor }}

    # - name: Check CDC
    #   if: env.verify=='yes'
    #   id: check-4
    #   run: |
    #     if [ "${CDC}" == "None" ]; then
    #       echo "WARNING_BODY=- [ ] enter the Cost Center.[^1]" >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] enter the Cost Center." >> $GITHUB_OUTPUT
    #     fi
    #   env:
    #     CDC: ${{ steps.issue-parser.outputs.issueparser_cdc }}

    # - name: Check Purchase Motivation
    #   if: env.verify=='yes'
    #   id: check-5
    #   run: |
    #     if [ "${PURCHASE_MOTIVATION}" == "" ]; then
    #       echo "WARNING_BODY=- [ ] enter the Purchase Motivation." >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] enter the Purchase Motivation." >> $GITHUB_OUTPUT
    #     fi
    #   env:
    #     PURCHASE_MOTIVATION: ${{ steps.issue-parser.outputs.issueparser_purchase_motivation }}

    # - name: Check Supplier
    #   if: env.verify=='yes'
    #   id: check-6
    #   run: |
    #     if [ "${SUPPLIER}" == "" ]; then
    #       echo "WARNING_BODY=- [ ] enter the Supplier." >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] enter the Supplier." >> $GITHUB_OUTPUT
    #     fi
    #   env:
    #     SUPPLIER: ${{ steps.issue-parser.outputs.issueparser_supplier }}
        
    # - name: Check Supplier Reason
    #   if: env.verify=='yes'
    #   id: check-7
    #   run: |
    #     if [ "${SUPPLIER_REASON}" == "None" ]; then
    #       echo "WARNING_BODY=- [ ] enter the Supplier Reason.[^1]" >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] enter the Supplier Reason." >> $GITHUB_OUTPUT
    #     fi
    #   env:
    #     SUPPLIER_REASON: ${{ steps.issue-parser.outputs.issueparser_supplier_reason }}
        
    # - name: Check Warehouse Notes
    #   if: env.verify=='yes'
    #   id: check-8
    #   run: |
    #     if [ "${WAREHOUSE_NOTES}" == "None" ]; then
    #       echo "WARNING_BODY=- [ ] enter the Warehouse Notes.[^1]" >> $GITHUB_OUTPUT
    #       echo "trigger_warning=yes" >> $GITHUB_ENV
    #     else
    #       echo "WARNING_BODY=- [x] enter the Warehouse Notes." >> $GITHUB_OUTPUT
    #     fi
    #   env:
    #     WAREHOUSE_NOTES: ${{ steps.issue-parser.outputs.issueparser_warehouse_notes }}
        
    # - name: Print URL of problematic issue
    #   if: (env.verify=='yes') && (env.trigger_warning=='yes')
    #   run: |
    #     echo "‚ùå Problems detected with ${{ github.event.issue.html_url }}"
        
    # - name: Create comment
    #   if: (env.verify=='yes') && (env.trigger_warning=='yes')
    #   uses: peter-evans/create-or-update-comment@v2
    #   with:
    #     issue-number: ${{ github.event.issue.number }}
    #     body: |
    #       ## ‚ö†Ô∏è Detected missing mandatory information
    #       Hi @${{ github.event.issue.user.login }} üëãüèª
          
    #       Some of the following points need your attention.
          
    #       You are required to:
    #       ${{ steps.check-1.outputs.WARNING_BODY }}
    #       ${{ steps.check-2.outputs.WARNING_BODY }}
    #       ${{ steps.check-3.outputs.WARNING_BODY }}
    #       ${{ steps.check-4.outputs.WARNING_BODY }}
    #       ${{ steps.check-5.outputs.WARNING_BODY }}
    #       ${{ steps.check-6.outputs.WARNING_BODY }}
    #       ${{ steps.check-7.outputs.WARNING_BODY }}
    #       ${{ steps.check-8.outputs.WARNING_BODY }}
          
    #       <sub>Please, mark the points above as solved once done.</sub>
    #       [^1]: To get to know the allowed options for the dropdown fields, you may peruse the [**`template`**](../blob/master/.github/ISSUE_TEMPLATE/purchase-order.yml).
    #     reactions: 'confused'
        